from transformers import AutoModelForCausalLM, AutoTokenizer
import re
import random

device = "cuda" if torch.cuda.is_available() else "cpu"

try:
    model_path = "/kaggle/working/results"
    tokenizer = AutoTokenizer.from_pretrained(model_path)
    model = AutoModelForCausalLM.from_pretrained(model_path).to(device)
    print("Модель успешно подгрузилась")
except Exception as e:
    print(f"Ошибка загрузки: {e}")
    exit()

# Библиотека терапевтических техник
TECHNIQUES = {
    "одиночество": [
        "Как вы обычно заполняете пустоту? Возможно, творчество или отношения?",
        "Опишите своё одиночество как объект: какой у него цвет и форма?",
        "Если бы ваше одиночество могло говорить, что бы оно сказало?"
    ],
    "смерть": [
        "Попробуйте представить свой страх до абсурда — что в нём самого нелепого?",
        "Что бы вы хотели оставить после себя?",
        "Представьте смерть как собеседника — о чём бы вы её спросили?"
    ],
    "свобода": [
        "Шкалирование: 'Насколько свобода для вас сейчас — бремя или дар?' (1-10)",
        "Контраст: 'Опишите момент полной свободы и момента её отсутствия'",
        "Метафора: 'Если бы ваша свобода была природным явлением, каким бы она была?'"
    ],
    "бессмысленность": [
        "Деконструкция: 'Что для вас 'смысл'? Как вы понимаете его отсутствие?'",
        "Эксперимент: 'Представьте, что смысл внезапно появился — что изменилось бы?'",
        "Дневник смыслов: предложите отмечать даже маленькие осмысленные моменты"
    ]
}

def generate_natural_response(user_input):
    prompt = f"""
Ты — экзистенциальный психотерапевт. Ответь клиенту естественно, используя подходящие техники.

**Правила ответа:**

1. Определи категории (используй ассоциации из списка):
   - Свобода: свобода, выбор, воздух, пространство, простор, счастье, жизнь, ветер, небо, воля, полёт.
   - Бессмысленность: бессмысленность, пустота, абсурд, депрессия, апатия, тоска, грусть, скука, безысходность, тщетность, серость.
   - Одиночество: одиночество, свобода, тишина, грусть, пустота, тоска, покой, спокойствие, холод, печаль, одиночество.
   - Смерть: конец, смерть, покой, пустота, страх, освобождение, неизвестность, перерождение, свобода, траур.
2. Выбери технику работы (из базы):
   {TECHNIQUES}
3. Выведи категории, которые ты определил, в формате: категория — слово пользователя.

Запрос: "{user_input}"
Ответ (без технических пометок, только естественная речь):
"""

    generation_config = {
        "max_new_tokens": 200,  # Уменьшил лимит токенов
        "do_sample": True,
        "temperature": 0.7,  # Более консервативный параметр
        "top_k": 40,
        "top_p": 0.9,
        "no_repeat_ngram_size": 3,
        "repetition_penalty": 1.1,
        "eos_token_id": tokenizer.eos_token_id,
        "pad_token_id": tokenizer.eos_token_id,
}
    
    inputs = tokenizer(prompt, return_tensors="pt").to(device)
    output = model.generate(**inputs, **generation_config)
    response = tokenizer.decode(output[0], skip_special_tokens=True)
    
    # Постобработка
    response = response[len(prompt):].strip()
    response = re.sub(r'^(—|"|\').*?[.!?]\s*', '', response)  # Удаляем диалоговые маркеры
    
    # Если ответ слишком короткий, добавляем технику вручную
    if len(response.split()) < 5:
        if "одиночеств" in user_input.lower():
            response = random.choice(TECHNIQUES["одиночество"])
        elif "смерт" in user_input.lower():
            response = random.choice(TECHNIQUES["смерть"])
        elif "смысл" in user_input.lower():
            response = random.choice(TECHNIQUES["бессмысленность"])
         elif "свобод" in user_input.lower():
            response = random.choice(TECHNIQUES["свобода"])   
    
    return response if response else "Расскажите об этом подробнее..."

# Пример использования
user_input = "Я чувствую ледяную пустоту внутри"
response = 'Exi(s)t:' + generate_natural_response(user_input)
print(response)
